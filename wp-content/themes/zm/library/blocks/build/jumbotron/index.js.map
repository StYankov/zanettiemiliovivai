{"version":3,"file":"jumbotron/index.js","mappings":"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","sources":["webpack://hlebarovpress/./blocks/jumbotron/block.jsx","webpack://hlebarovpress/./blocks/jumbotron/edit.jsx","webpack://hlebarovpress/./blocks/jumbotron/inspector-controls.jsx","webpack://hlebarovpress/./blocks/utils/mediaPreview.js","webpack://hlebarovpress/external window [\"wp\",\"blockEditor\"]","webpack://hlebarovpress/external window [\"wp\",\"blocks\"]","webpack://hlebarovpress/external window [\"wp\",\"components\"]","webpack://hlebarovpress/external window [\"wp\",\"data\"]","webpack://hlebarovpress/external window [\"wp\",\"element\"]","webpack://hlebarovpress/webpack/bootstrap","webpack://hlebarovpress/webpack/runtime/compat get default export","webpack://hlebarovpress/webpack/runtime/define property getters","webpack://hlebarovpress/webpack/runtime/hasOwnProperty shorthand","webpack://hlebarovpress/webpack/runtime/make namespace object","webpack://hlebarovpress/./blocks/jumbotron/index.js"],"sourcesContent":["export function Jumbotron({ attributes }) {\n    const { imageUrl, heading, title, subtitle } = attributes;\n\n    return (\n        <div className=\"jumbotron\" style={{\n            backgroundImage: `url(${imageUrl || 'https://via.placeholder.com/1920x1080' })`\n        }}>\n            <div className=\"jumbotron__inner\">\n                <h1 className=\"jumbotron__title\">{ title }</h1>\n\n                <h4 className=\"jumbotron__heading\">{ heading }</h4>\n\n                <div className=\"jumbotron__footer\">\n                    <div className=\"jumbotron__line\"></div>\n                    <div className=\"jumbotron__subtitle h1\">{ subtitle }</div>\n                    <div className=\"jumbotron__line right\"></div>\n                </div>\n            </div>\n        </div>\n    );\n}","import { useBlockProps } from '@wordpress/block-editor';\nimport { JumbotronInspectorControls } from './inspector-controls';\nimport { Jumbotron } from './block';\n\nexport function Edit(props) {\n\tconst blockProps = useBlockProps();\n\n    return (\n        <div {...blockProps}>\n            <JumbotronInspectorControls {...props} />\n            <Jumbotron {...props} />\n        </div>\n    );\n}","import { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, PanelRow, TextControl } from '@wordpress/components';\nimport { MediaUploadPreview } from '../utils/mediaPreview';\n\nexport function JumbotronInspectorControls({ attributes, setAttributes}) {\n    const { imageId, imageUrl, heading, title, subtitle } = attributes;\n    \n    return (\n        <InspectorControls>\n            <PanelBody\n                title=\"Settings\"\n                initialOpen\n            >\n                <PanelRow>\n                    <MediaUploadPreview\n                        imageId={imageId}\n                        imageUrl={imageUrl}\n                        onSelect={el => setAttributes({ imageUrl: el.url, imageId: el.id })}\n                        label='Background Image'\n                    />\n                </PanelRow>\n\n                <PanelRow>\n                    <TextControl\n                        label=\"Heading\"\n                        onChange={ heading => setAttributes({ heading }) }\n                        value={heading}\n                    />\n                </PanelRow>\n\n\n                <PanelRow>\n                    <TextControl\n                        label=\"Title\"\n                        onChange={ title => setAttributes({ title }) }\n                        value={title}\n                    />\n                </PanelRow>\n\n                <PanelRow>\n                    <TextControl\n                        label=\"Subtitle\"\n                        onChange={ subtitle => setAttributes({ subtitle }) }\n                        value={subtitle}\n                    />\n                </PanelRow>\n\n            </PanelBody>\n        </InspectorControls>\n    );\n}","import { useSelect } from '@wordpress/data';\nimport { MediaPlaceholder } from '@wordpress/block-editor';\n\nexport function MediaUploadPreview({\n    imageId,\n    imageUrl,\n    onSelect,\n    label = 'Image'\n}) {\n    const thumbnailUrl = useSelect( select => {\n        const image = imageId && select( 'core' ).getMedia( imageId );\n        return image && image?.media_details?.sizes?.medium?.source_url || imageUrl;\n      }, [ imageId ] );\n\n    const mediaPreview = !! thumbnailUrl && (\n        <a href={ imageUrl }>\n            <img src={ thumbnailUrl } />\n        </a>\n    );\n\n    return (\n        <MediaPlaceholder\n            onSelect = {onSelect}\n            value={{\n                id: imageId,\n                src: imageUrl\n            }}\n            allowedTypes = { [ 'image' ] }\n            multiple = { false }\n            mediaPreview={mediaPreview}\n            labels={{ title: label }}\n        />\n    )\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from '@wordpress/blocks';\nimport { useBlockProps } from '@wordpress/block-editor';\nimport metadata from './block.json';\n\nimport { Edit } from './edit';\nimport { Jumbotron } from './block';\n\nregisterBlockType(metadata.name, {\n    apiVersion: 2,\n    title: metadata.title,\n    attributes: metadata.attributes,\n    edit: Edit,\n    save(props) {\n        const blockProps = useBlockProps.save();\n\n        return (\n            <div {...blockProps}>\n                <Jumbotron {...props} />\n            </div>\n        );\n    }\n});"],"names":["Jumbotron","attributes","imageUrl","heading","title","subtitle","backgroundImage","useBlockProps","JumbotronInspectorControls","Edit","props","blockProps","InspectorControls","PanelBody","PanelRow","TextControl","MediaUploadPreview","setAttributes","imageId","el","url","id","useSelect","MediaPlaceholder","onSelect","label","thumbnailUrl","select","image","getMedia","media_details","sizes","medium","source_url","mediaPreview","src","registerBlockType","metadata","name","apiVersion","edit","save"],"sourceRoot":""}