{"version":3,"file":"parallax-block/index.js","mappings":";;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,MAAM,IAA0C;AAChD;AACA,IAAI,iCAAO,EAAE,oCAAE,OAAO;AAAA;AAAA;AAAA,kGAAC;AACvB,IAAI,KAAK,EAQN;AACH,CAAC,0CAA0C,qBAAM;AACjD;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;;AAE1B;AACA;;AAEA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;;AAEN;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,sBAAsB,mBAAmB;AACzC;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,+BAA+B,mBAAmB;;AAElD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,+CAA+C;;AAE/C;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA,8HAA8H,gBAAgB;AAC9I,mIAAmI,gBAAgB;AACnJ;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AA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","sources":["webpack://hlebarovpress/../../../../node_modules/rellax/rellax.js","webpack://hlebarovpress/./blocks/parallax-block/blockEdit.jsx","webpack://hlebarovpress/./blocks/parallax-block/blockSave.jsx","webpack://hlebarovpress/./blocks/parallax-block/edit.jsx","webpack://hlebarovpress/./blocks/parallax-block/inspector-controls.jsx","webpack://hlebarovpress/./blocks/utils/mediaPreview.js","webpack://hlebarovpress/external window [\"wp\",\"blockEditor\"]","webpack://hlebarovpress/external window [\"wp\",\"blocks\"]","webpack://hlebarovpress/external window [\"wp\",\"components\"]","webpack://hlebarovpress/external window [\"wp\",\"data\"]","webpack://hlebarovpress/external window [\"wp\",\"element\"]","webpack://hlebarovpress/webpack/bootstrap","webpack://hlebarovpress/webpack/runtime/compat get default export","webpack://hlebarovpress/webpack/runtime/define property getters","webpack://hlebarovpress/webpack/runtime/global","webpack://hlebarovpress/webpack/runtime/hasOwnProperty shorthand","webpack://hlebarovpress/webpack/runtime/make namespace object","webpack://hlebarovpress/./blocks/parallax-block/index.js"],"sourcesContent":["\n// ------------------------------------------\n// Rellax.js\n// Buttery smooth parallax library\n// Copyright (c) 2016 Moe Amaya (@moeamaya)\n// MIT license\n//\n// Thanks to Paraxify.js and Jaime Cabllero\n// for parallax concepts\n// ------------------------------------------\n\n(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.Rellax = factory();\n  }\n}(typeof window !== \"undefined\" ? window : global, function () {\n  var Rellax = function(el, options){\n    \"use strict\";\n\n    var self = Object.create(Rellax.prototype);\n\n    var posY = 0;\n    var screenY = 0;\n    var posX = 0;\n    var screenX = 0;\n    var blocks = [];\n    var pause = true;\n\n    // check what requestAnimationFrame to use, and if\n    // it's not supported, use the onscroll event\n    var loop = window.requestAnimationFrame ||\n      window.webkitRequestAnimationFrame ||\n      window.mozRequestAnimationFrame ||\n      window.msRequestAnimationFrame ||\n      window.oRequestAnimationFrame ||\n      function(callback){ return setTimeout(callback, 1000 / 60); };\n\n    // store the id for later use\n    var loopId = null;\n\n    // Test via a getter in the options object to see if the passive property is accessed\n    var supportsPassive = false;\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function() {\n          supportsPassive = true;\n        }\n      });\n      window.addEventListener(\"testPassive\", null, opts);\n      window.removeEventListener(\"testPassive\", null, opts);\n    } catch (e) {}\n\n    // check what cancelAnimation method to use\n    var clearLoop = window.cancelAnimationFrame || window.mozCancelAnimationFrame || clearTimeout;\n\n    // check which transform property to use\n    var transformProp = window.transformProp || (function(){\n        var testEl = document.createElement('div');\n        if (testEl.style.transform === null) {\n          var vendors = ['Webkit', 'Moz', 'ms'];\n          for (var vendor in vendors) {\n            if (testEl.style[ vendors[vendor] + 'Transform' ] !== undefined) {\n              return vendors[vendor] + 'Transform';\n            }\n          }\n        }\n        return 'transform';\n      })();\n\n    // Default Settings\n    self.options = {\n      speed: -2,\n\t    verticalSpeed: null,\n\t    horizontalSpeed: null,\n      breakpoints: [576, 768, 1201],\n      center: false,\n      wrapper: null,\n      relativeToWrapper: false,\n      round: true,\n      vertical: true,\n      horizontal: false,\n      verticalScrollAxis: \"y\",\n      horizontalScrollAxis: \"x\",\n      callback: function() {},\n    };\n\n    // User defined options (might have more in the future)\n    if (options){\n      Object.keys(options).forEach(function(key){\n        self.options[key] = options[key];\n      });\n    }\n\n    function validateCustomBreakpoints () {\n      if (self.options.breakpoints.length === 3 && Array.isArray(self.options.breakpoints)) {\n        var isAscending = true;\n        var isNumerical = true;\n        var lastVal;\n        self.options.breakpoints.forEach(function (i) {\n          if (typeof i !== 'number') isNumerical = false;\n          if (lastVal !== null) {\n            if (i < lastVal) isAscending = false;\n          }\n          lastVal = i;\n        });\n        if (isAscending && isNumerical) return;\n      }\n      // revert defaults if set incorrectly\n      self.options.breakpoints = [576, 768, 1201];\n      console.warn(\"Rellax: You must pass an array of 3 numbers in ascending order to the breakpoints option. Defaults reverted\");\n    }\n\n    if (options && options.breakpoints) {\n      validateCustomBreakpoints();\n    }\n\n    // By default, rellax class\n    if (!el) {\n      el = '.rellax';\n    }\n\n    // check if el is a className or a node\n    var elements = typeof el === 'string' ? document.querySelectorAll(el) : [el];\n\n    // Now query selector\n    if (elements.length > 0) {\n      self.elems = elements;\n    }\n\n    // The elements don't exist\n    else {\n      console.warn(\"Rellax: The elements you're trying to select don't exist.\");\n      return;\n    }\n\n    // Has a wrapper and it exists\n    if (self.options.wrapper) {\n      if (!self.options.wrapper.nodeType) {\n        var wrapper = document.querySelector(self.options.wrapper);\n\n        if (wrapper) {\n          self.options.wrapper = wrapper;\n        } else {\n          console.warn(\"Rellax: The wrapper you're trying to use doesn't exist.\");\n          return;\n        }\n      }\n    }\n\n    // set a placeholder for the current breakpoint\n    var currentBreakpoint;\n\n    // helper to determine current breakpoint\n    var getCurrentBreakpoint = function (w) {\n      var bp = self.options.breakpoints;\n      if (w < bp[0]) return 'xs';\n      if (w >= bp[0] && w < bp[1]) return 'sm';\n      if (w >= bp[1] && w < bp[2]) return 'md';\n      return 'lg';\n    };\n\n    // Get and cache initial position of all elements\n    var cacheBlocks = function() {\n      for (var i = 0; i < self.elems.length; i++){\n        var block = createBlock(self.elems[i]);\n        blocks.push(block);\n      }\n    };\n\n\n    // Let's kick this script off\n    // Build array for cached element values\n    var init = function() {\n      for (var i = 0; i < blocks.length; i++){\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n\n      blocks = [];\n\n      screenY = window.innerHeight;\n      screenX = window.innerWidth;\n      currentBreakpoint = getCurrentBreakpoint(screenX);\n\n      setPosition();\n\n      cacheBlocks();\n\n      animate();\n\n      // If paused, unpause and set listener for window resizing events\n      if (pause) {\n        window.addEventListener('resize', init);\n        pause = false;\n        // Start the loop\n        update();\n      }\n    };\n\n    // We want to cache the parallax blocks'\n    // values: base, top, height, speed\n    // el: is dom object, return: el cache values\n    var createBlock = function(el) {\n      var dataPercentage = el.getAttribute( 'data-rellax-percentage' );\n      var dataSpeed = el.getAttribute( 'data-rellax-speed' );\n      var dataXsSpeed = el.getAttribute( 'data-rellax-xs-speed' );\n      var dataMobileSpeed = el.getAttribute( 'data-rellax-mobile-speed' );\n      var dataTabletSpeed = el.getAttribute( 'data-rellax-tablet-speed' );\n      var dataDesktopSpeed = el.getAttribute( 'data-rellax-desktop-speed' );\n      var dataVerticalSpeed = el.getAttribute('data-rellax-vertical-speed');\n      var dataHorizontalSpeed = el.getAttribute('data-rellax-horizontal-speed');\n      var dataVericalScrollAxis = el.getAttribute('data-rellax-vertical-scroll-axis');\n      var dataHorizontalScrollAxis = el.getAttribute('data-rellax-horizontal-scroll-axis');\n      var dataZindex = el.getAttribute( 'data-rellax-zindex' ) || 0;\n      var dataMin = el.getAttribute( 'data-rellax-min' );\n      var dataMax = el.getAttribute( 'data-rellax-max' );\n      var dataMinX = el.getAttribute('data-rellax-min-x');\n      var dataMaxX = el.getAttribute('data-rellax-max-x');\n      var dataMinY = el.getAttribute('data-rellax-min-y');\n      var dataMaxY = el.getAttribute('data-rellax-max-y');\n      var mapBreakpoints;\n      var breakpoints = true;\n\n      if (!dataXsSpeed && !dataMobileSpeed && !dataTabletSpeed && !dataDesktopSpeed) {\n        breakpoints = false;\n      } else {\n        mapBreakpoints = {\n          'xs': dataXsSpeed,\n          'sm': dataMobileSpeed,\n          'md': dataTabletSpeed,\n          'lg': dataDesktopSpeed\n        };\n      }\n\n      // initializing at scrollY = 0 (top of browser), scrollX = 0 (left of browser)\n      // ensures elements are positioned based on HTML layout.\n      //\n      // If the element has the percentage attribute, the posY and posX needs to be\n      // the current scroll position's value, so that the elements are still positioned based on HTML layout\n      var wrapperPosY = self.options.wrapper ? self.options.wrapper.scrollTop : (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop);\n      // If the option relativeToWrapper is true, use the wrappers offset to top, subtracted from the current page scroll.\n      if (self.options.relativeToWrapper) {\n        var scrollPosY = (window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop);\n        wrapperPosY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n      var posY = self.options.vertical ? ( dataPercentage || self.options.center ? wrapperPosY : 0 ) : 0;\n      var posX = self.options.horizontal ? ( dataPercentage || self.options.center ? self.options.wrapper ? self.options.wrapper.scrollLeft : (window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft) : 0 ) : 0;\n\n      var blockTop = posY + el.getBoundingClientRect().top;\n      var blockHeight = el.clientHeight || el.offsetHeight || el.scrollHeight;\n\n      var blockLeft = posX + el.getBoundingClientRect().left;\n      var blockWidth = el.clientWidth || el.offsetWidth || el.scrollWidth;\n\n      // apparently parallax equation everyone uses\n      var percentageY = dataPercentage ? dataPercentage : (posY - blockTop + screenY) / (blockHeight + screenY);\n      var percentageX = dataPercentage ? dataPercentage : (posX - blockLeft + screenX) / (blockWidth + screenX);\n      if(self.options.center){ percentageX = 0.5; percentageY = 0.5; }\n\n      // Optional individual block speed as data attr, otherwise global speed\n      var speed = (breakpoints && mapBreakpoints[currentBreakpoint] !== null) ? Number(mapBreakpoints[currentBreakpoint]) : (dataSpeed ? dataSpeed : self.options.speed);\n      var verticalSpeed = dataVerticalSpeed ? dataVerticalSpeed : self.options.verticalSpeed;\n      var horizontalSpeed = dataHorizontalSpeed ? dataHorizontalSpeed : self.options.horizontalSpeed;\n\n      // Optional individual block movement axis direction as data attr, otherwise gobal movement direction\n      var verticalScrollAxis = dataVericalScrollAxis ? dataVericalScrollAxis : self.options.verticalScrollAxis;\n      var horizontalScrollAxis = dataHorizontalScrollAxis ? dataHorizontalScrollAxis : self.options.horizontalScrollAxis;\n\n      var bases = updatePosition(percentageX, percentageY, speed, verticalSpeed, horizontalSpeed);\n\n      // ~~Store non-translate3d transforms~~\n      // Store inline styles and extract transforms\n      var style = el.style.cssText;\n      var transform = '';\n\n      // Check if there's an inline styled transform\n      var searchResult = /transform\\s*:/i.exec(style);\n      if (searchResult) {\n        // Get the index of the transform\n        var index = searchResult.index;\n\n        // Trim the style to the transform point and get the following semi-colon index\n        var trimmedStyle = style.slice(index);\n        var delimiter = trimmedStyle.indexOf(';');\n\n        // Remove \"transform\" string and save the attribute\n        if (delimiter) {\n          transform = \" \" + trimmedStyle.slice(11, delimiter).replace(/\\s/g,'');\n        } else {\n          transform = \" \" + trimmedStyle.slice(11).replace(/\\s/g,'');\n        }\n      }\n\n      return {\n        baseX: bases.x,\n        baseY: bases.y,\n        top: blockTop,\n        left: blockLeft,\n        height: blockHeight,\n        width: blockWidth,\n        speed: speed,\n        verticalSpeed: verticalSpeed,\n        horizontalSpeed: horizontalSpeed,\n        verticalScrollAxis: verticalScrollAxis,\n        horizontalScrollAxis: horizontalScrollAxis,\n        style: style,\n        transform: transform,\n        zindex: dataZindex,\n        min: dataMin,\n        max: dataMax,\n        minX: dataMinX,\n        maxX: dataMaxX,\n        minY: dataMinY,\n        maxY: dataMaxY\n      };\n    };\n\n    // set scroll position (posY, posX)\n    // side effect method is not ideal, but okay for now\n    // returns true if the scroll changed, false if nothing happened\n    var setPosition = function() {\n      var oldY = posY;\n      var oldX = posX;\n\n      posY = self.options.wrapper ? self.options.wrapper.scrollTop : (document.documentElement || document.body.parentNode || document.body).scrollTop || window.pageYOffset;\n      posX = self.options.wrapper ? self.options.wrapper.scrollLeft : (document.documentElement || document.body.parentNode || document.body).scrollLeft || window.pageXOffset;\n      // If option relativeToWrapper is true, use relative wrapper value instead.\n      if (self.options.relativeToWrapper) {\n        var scrollPosY = (document.documentElement || document.body.parentNode || document.body).scrollTop || window.pageYOffset;\n        posY = scrollPosY - self.options.wrapper.offsetTop;\n      }\n\n\n      if (oldY != posY && self.options.vertical) {\n        // scroll changed, return true\n        return true;\n      }\n\n      if (oldX != posX && self.options.horizontal) {\n        // scroll changed, return true\n        return true;\n      }\n\n      // scroll did not change\n      return false;\n    };\n\n    // Ahh a pure function, gets new transform value\n    // based on scrollPosition and speed\n    // Allow for decimal pixel values\n    var updatePosition = function(percentageX, percentageY, speed, verticalSpeed, horizontalSpeed) {\n      var result = {};\n      var valueX = ((horizontalSpeed ? horizontalSpeed : speed) * (100 * (1 - percentageX)));\n      var valueY = ((verticalSpeed ? verticalSpeed : speed) * (100 * (1 - percentageY)));\n\n      result.x = self.options.round ? Math.round(valueX) : Math.round(valueX * 100) / 100;\n      result.y = self.options.round ? Math.round(valueY) : Math.round(valueY * 100) / 100;\n\n      return result;\n    };\n\n    // Remove event listeners and loop again\n    var deferredUpdate = function() {\n      window.removeEventListener('resize', deferredUpdate);\n      window.removeEventListener('orientationchange', deferredUpdate);\n      (self.options.wrapper ? self.options.wrapper : window).removeEventListener('scroll', deferredUpdate);\n      (self.options.wrapper ? self.options.wrapper : document).removeEventListener('touchmove', deferredUpdate);\n\n      // loop again\n      loopId = loop(update);\n    };\n\n    // Loop\n    var update = function() {\n      if (setPosition() && pause === false) {\n        animate();\n\n        // loop again\n        loopId = loop(update);\n      } else {\n        loopId = null;\n\n        // Don't animate until we get a position updating event\n        window.addEventListener('resize', deferredUpdate);\n        window.addEventListener('orientationchange', deferredUpdate);\n        (self.options.wrapper ? self.options.wrapper : window).addEventListener('scroll', deferredUpdate, supportsPassive ? { passive: true } : false);\n        (self.options.wrapper ? self.options.wrapper : document).addEventListener('touchmove', deferredUpdate, supportsPassive ? { passive: true } : false);\n      }\n    };\n\n    // Transform3d on parallax element\n    var animate = function() {\n      var positions;\n      for (var i = 0; i < self.elems.length; i++){\n        // Determine relevant movement directions\n        var verticalScrollAxis = blocks[i].verticalScrollAxis.toLowerCase();\n        var horizontalScrollAxis = blocks[i].horizontalScrollAxis.toLowerCase();\n        var verticalScrollX = verticalScrollAxis.indexOf(\"x\") != -1 ? posY : 0;\n        var verticalScrollY = verticalScrollAxis.indexOf(\"y\") != -1 ? posY : 0;\n        var horizontalScrollX = horizontalScrollAxis.indexOf(\"x\") != -1 ? posX : 0;\n        var horizontalScrollY = horizontalScrollAxis.indexOf(\"y\") != -1 ? posX : 0;\n\n        var percentageY = ((verticalScrollY + horizontalScrollY - blocks[i].top + screenY) / (blocks[i].height + screenY));\n        var percentageX = ((verticalScrollX + horizontalScrollX - blocks[i].left + screenX) / (blocks[i].width + screenX));\n\n        // Subtracting initialize value, so element stays in same spot as HTML\n        positions = updatePosition(percentageX, percentageY, blocks[i].speed, blocks[i].verticalSpeed, blocks[i].horizontalSpeed);\n        var positionY = positions.y - blocks[i].baseY;\n        var positionX = positions.x - blocks[i].baseX;\n\n        // The next two \"if\" blocks go like this:\n        // Check if a limit is defined (first \"min\", then \"max\");\n        // Check if we need to change the Y or the X\n        // (Currently working only if just one of the axes is enabled)\n        // Then, check if the new position is inside the allowed limit\n        // If so, use new position. If not, set position to limit.\n\n        // Check if a min limit is defined\n        if (blocks[i].min !== null) {\n          if (self.options.vertical && !self.options.horizontal) {\n            positionY = positionY <= blocks[i].min ? blocks[i].min : positionY;\n          }\n          if (self.options.horizontal && !self.options.vertical) {\n            positionX = positionX <= blocks[i].min ? blocks[i].min : positionX;\n          }\n        }\n\n        // Check if directional min limits are defined\n        if (blocks[i].minY != null) {\n            positionY = positionY <= blocks[i].minY ? blocks[i].minY : positionY;\n        }\n        if (blocks[i].minX != null) {\n            positionX = positionX <= blocks[i].minX ? blocks[i].minX : positionX;\n        }\n\n        // Check if a max limit is defined\n        if (blocks[i].max !== null) {\n          if (self.options.vertical && !self.options.horizontal) {\n            positionY = positionY >= blocks[i].max ? blocks[i].max : positionY;\n          }\n          if (self.options.horizontal && !self.options.vertical) {\n            positionX = positionX >= blocks[i].max ? blocks[i].max : positionX;\n          }\n        }\n\n        // Check if directional max limits are defined\n        if (blocks[i].maxY != null) {\n            positionY = positionY >= blocks[i].maxY ? blocks[i].maxY : positionY;\n        }\n        if (blocks[i].maxX != null) {\n            positionX = positionX >= blocks[i].maxX ? blocks[i].maxX : positionX;\n        }\n\n        var zindex = blocks[i].zindex;\n\n        // Move that element\n        // (Set the new translation and append initial inline transforms.)\n        var translate = 'translate3d(' + (self.options.horizontal ? positionX : '0') + 'px,' + (self.options.vertical ? positionY : '0') + 'px,' + zindex + 'px) ' + blocks[i].transform;\n        self.elems[i].style[transformProp] = translate;\n      }\n      self.options.callback(positions);\n    };\n\n    self.destroy = function() {\n      for (var i = 0; i < self.elems.length; i++){\n        self.elems[i].style.cssText = blocks[i].style;\n      }\n\n      // Remove resize event listener if not pause, and pause\n      if (!pause) {\n        window.removeEventListener('resize', init);\n        pause = true;\n      }\n\n      // Clear the animation loop to prevent possible memory leak\n      clearLoop(loopId);\n      loopId = null;\n    };\n\n    // Init\n    init();\n\n    // Allow to recalculate the initial values whenever we want\n    self.refresh = init;\n\n    return self;\n  };\n  return Rellax;\n}));\n","import { useEffect, useRef } from \"@wordpress/element\";\nimport Rellax from 'rellax';\n\nexport function ImageBlockParallax(props) {\n    const {\n        backFaceImageUrl,\n        frontFaceImageUrl,\n        frontImagePosition\n    } = props.attributes;\n\n    const elRef = useRef(null);\n\n    useEffect(() => {\n        if(backFaceImageUrl && elRef.current) {\n            new Rellax(elRef.current.querySelector('.image-block-parallax__back img'));\n        }\n    }, [backFaceImageUrl]);\n\n    useEffect(() => {\n        if(frontFaceImageUrl && elRef.current) {\n            new Rellax(elRef.current.querySelector('.image-block-parallax__front img'));\n        }\n    }, [frontFaceImageUrl]);\n\n    return (\n        <div ref={elRef} className={`image-block-parallax position-${frontImagePosition}`}>\n            <div className=\"image-block-parallax__back\">\n                {backFaceImageUrl && <img src={backFaceImageUrl} />}\n            </div>\n            <div className=\"image-block-parallax__front\">\n                {frontFaceImageUrl && <img src={frontFaceImageUrl} />}\n            </div>\n        </div>\n    );\n}","import { useBlockProps } from '@wordpress/block-editor';\n\nexport function Save(props) {\n    const {\n        backFaceImageUrl,\n        frontFaceImageUrl,\n        frontImagePosition\n    } = props.attributes;\n\n    const blockProps = useBlockProps.save();\n    \n    return (\n        <div {...blockProps}>\n            <div className={`image-block-parallax position-${frontImagePosition}`}>\n                <div className=\"image-block-parallax__back\">\n                    {backFaceImageUrl && <img src={backFaceImageUrl} />}\n                </div>\n                <div className=\"image-block-parallax__front\">\n                    {frontFaceImageUrl && <img src={frontFaceImageUrl} />}\n                </div>\n            </div>\n        </div>\n    );\n}","import { useBlockProps } from '@wordpress/block-editor';\nimport { ImageBlockParallaxInspectorControls } from './inspector-controls';\n\nimport { ImageBlockParallax } from './blockEdit';\n\nexport function Edit(props) {\n\tconst blockProps = useBlockProps();\n\n    return (\n        <div {...blockProps}>\n            <ImageBlockParallaxInspectorControls {...props} />\n            <ImageBlockParallax {...props} />\n        </div>\n    )\n}","import { InspectorControls } from '@wordpress/block-editor';\nimport { PanelBody, PanelRow, SelectControl } from '@wordpress/components';\nimport { MediaUploadPreview } from '../utils/mediaPreview';\n\nexport function ImageBlockParallaxInspectorControls({ attributes, setAttributes }) {\n    const {\n        backFaceImageId,\n        backFaceImageUrl,\n        frontFaceImageId,\n        frontFaceImageUrl,\n        frontImagePosition\n    } = attributes;\n\n    return (\n        <InspectorControls>\n            <PanelBody title='Settings'>\n                <PanelRow>\n                    <MediaUploadPreview\n                        imageId={ backFaceImageId }\n                        imageUrl={ backFaceImageUrl }\n                        label=\"Background Image\"\n                        onSelect={el => setAttributes({ backFaceImageUrl: el.url, backFaceImageId: el.id })}\n                    />\n                </PanelRow>\n\n                <PanelRow>\n                    <MediaUploadPreview\n                        imageId={ frontFaceImageId }\n                        imageUrl={ frontFaceImageUrl }\n                        label=\"Front Image (Parallax)\"\n                        onSelect={ el => setAttributes({ frontFaceImageUrl: el.url, frontFaceImageId: el.id }) }\n                    />\n                </PanelRow>\n\n                <PanelRow>\n                    <SelectControl\n                        label=\"Front Image Position\"\n                        value={ frontImagePosition }\n                        defaultValue=\"front-right\"\n                        options={[\n                            { label: 'Right', value: 'front-right' },\n                            { label: 'Left', value: 'front-left' }\n                        ]}\n                        onChange={ value => setAttributes({ frontImagePosition: value }) }\n                    />\n                </PanelRow>\n            </PanelBody>\n        </InspectorControls>\n    );\n}","import { useSelect } from '@wordpress/data';\nimport { MediaPlaceholder } from '@wordpress/block-editor';\n\nexport function MediaUploadPreview({\n    imageId,\n    imageUrl,\n    onSelect,\n    label = 'Image'\n}) {\n    const thumbnailUrl = useSelect( select => {\n        const image = imageId && select( 'core' ).getMedia( imageId );\n        return image && image?.media_details?.sizes?.medium?.source_url || imageUrl;\n      }, [ imageId ] );\n\n    const mediaPreview = !! thumbnailUrl && (\n        <a href={ imageUrl }>\n            <img src={ thumbnailUrl } />\n        </a>\n    );\n\n    return (\n        <MediaPlaceholder\n            onSelect = {onSelect}\n            value={{\n                id: imageId,\n                src: imageUrl\n            }}\n            allowedTypes = { [ 'image' ] }\n            multiple = { false }\n            mediaPreview={mediaPreview}\n            labels={{ title: label }}\n        />\n    )\n}","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\";\nimport metadata from './block.json';\n\nimport { Edit } from './edit';\nimport { Save } from './blockSave';\n\nregisterBlockType(metadata.name, {\n    title: metadata.title,\n    attributes: metadata.attributes,\n    edit: Edit,\n    save: Save,\n});"],"names":["useEffect","useRef","Rellax","ImageBlockParallax","props","backFaceImageUrl","frontFaceImageUrl","frontImagePosition","attributes","elRef","current","querySelector","useBlockProps","Save","blockProps","save","ImageBlockParallaxInspectorControls","Edit","InspectorControls","PanelBody","PanelRow","SelectControl","MediaUploadPreview","setAttributes","backFaceImageId","frontFaceImageId","el","url","id","label","value","useSelect","MediaPlaceholder","imageId","imageUrl","onSelect","thumbnailUrl","select","image","getMedia","media_details","sizes","medium","source_url","mediaPreview","src","title","registerBlockType","metadata","name","edit"],"sourceRoot":""}